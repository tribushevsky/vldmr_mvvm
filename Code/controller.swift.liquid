//
//  {{ prefix }}{{ module_info.name }}Controller.swift
{% include 'header' %}

import UIKit
import RxSwift
import RxCocoa

class {{ prefix }}{{ module_info.name }}Controller: {{ prefix }}ViewController<{{ prefix }}{{ module_info.name }}ViewModel> {

	override func viewDidLoad() {
	    super.viewDidLoad()
	    
	    setupView()
	    localize()
	    setupBinding()
	}	

	//func register{{ module_info.name }}(container: Container) {
	//    container.register({{ prefix }}{{ module_info.name }}Controller.self) { resolver in
	//        {{ prefix }}{{ module_info.name }}Controller(
	//			viewModel: resolver.resolve({{ prefix }}{{ module_info.name }}ViewModel.self)!
	//		)
	//    }.inObjectScope(.transient)
	//
	//    container.register({{ prefix }}{{ module_info.name }}ViewModel.self) { resolver in
	//        {{ prefix }}{{ module_info.name }}ViewModel(
	//			context: resolver.resolve({{ prefix }}{{ module_info.name }}Context.self)!,
	//			useCase: resolver.resolve({{ prefix }}{{ module_info.name }}UseCase.self)!,
	//			navigator: resolver.resolve({{ prefix }}{{ module_info.name }}Navigator.self)!
	//		)
	//    }.inObjectScope(.transient)
	//
	//    container.register({{ prefix }}{{ module_info.name }}Context.self) { _ in
	//		{{ prefix }}Base{{ module_info.name }}Context()
	//    }.inObjectScope(.transient)
	//
	//    container.register({{ prefix }}{{ module_info.name }}UseCase.self) { resolver in
	//		{{ prefix }}Base{{ module_info.name }}UseCase()
	//	}.inObjectScope(.transient)
	//
	//    container.register({{ prefix }}{{ module_info.name }}Navigator.self) { resolver in
	//        {{ prefix }}Base{{ module_info.name }}Navigator(
	//			dependencyResolver: resolver.resolve({{ prefix }}DependencyResolver.self)!
	//		)
	//    }.inObjectScope(.transient)
	//}

}

// MARK: - Private / Setup

private extension {{ prefix }}{{ module_info.name }}Controller {

	func setupView() {

	}

	func setupBinding() {
	    let input = {{ prefix }}{{ module_info.name }}ViewModel.Input()
	    let output = viewModel.transform(input: input)    
	}

	func localize() {
	    
	}

}

// MARK: - Reactive

extension Reactive where Base: {{ prefix }}{{ module_info.name }}Controller {

}
